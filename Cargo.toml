[package]
name = "kurbo"
version = "0.11.1"
authors = ["Raph Levien <raph.levien@gmail.com>"]
license = "MIT OR Apache-2.0"
edition = "2021"
# Keep in sync with RUST_MIN_VER in .github/workflows/ci.yml, with the README.md file,
# and with the MSRV in the `Unreleased` section of CHANGELOG.md.
rust-version = "1.65"
keywords = ["graphics", "curve", "curves", "bezier", "geometry"]
repository = "https://github.com/linebender/kurbo"
description = "A 2D curves library"
readme = "README.md"
categories = ["graphics"]

[package.metadata.docs.rs]
all-features = true
# There are no platform specific docs.
default-target = "x86_64-unknown-linux-gnu"
targets = []

[lints]
rust.unsafe_code = "forbid"

# LINEBENDER LINT SET - Cargo.toml - v2
# See https://linebender.org/wiki/canonical-lints/
rust.keyword_idents_2024 = "forbid"
rust.non_ascii_idents = "forbid"
rust.non_local_definitions = "forbid"
rust.unsafe_op_in_unsafe_fn = "forbid"

rust.elided_lifetimes_in_paths = "warn"
rust.let_underscore_drop = "warn"
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.single_use_lifetimes = "warn"
rust.trivial_numeric_casts = "warn"
# Setting check-cfg can be removed once we fix the benchmarks.
rust.unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
rust.unit_bindings = "warn"
rust.unnameable_types = "warn"
rust.unreachable_pub = "warn"
rust.unused_import_braces = "warn"
rust.unused_lifetimes = "warn"
rust.unused_macro_rules = "warn"
rust.unused_qualifications = "warn"
rust.variant_size_differences = "warn"

clippy.allow_attributes = "warn"
clippy.allow_attributes_without_reason = "warn"
clippy.cast_possible_truncation = "warn"
clippy.collection_is_never_read = "warn"
clippy.dbg_macro = "warn"
clippy.debug_assert_with_mut_call = "warn"
clippy.doc_markdown = "warn"
clippy.exhaustive_enums = "warn"
clippy.fn_to_numeric_cast_any = "forbid"
clippy.infinite_loop = "warn"
clippy.large_include_file = "warn"
clippy.large_stack_arrays = "warn"
clippy.match_same_arms = "warn"
clippy.mismatching_type_param_order = "warn"
clippy.missing_assert_message = "warn"
clippy.missing_errors_doc = "warn"
clippy.missing_fields_in_debug = "warn"
clippy.missing_panics_doc = "warn"
clippy.partial_pub_fields = "warn"
clippy.return_self_not_must_use = "warn"
clippy.same_functions_in_if_condition = "warn"
clippy.semicolon_if_nothing_returned = "warn"
clippy.shadow_unrelated = "warn"
clippy.should_panic_without_expect = "warn"
clippy.todo = "warn"
clippy.trivially_copy_pass_by_ref = "warn"
clippy.unseparated_literal_suffix = "warn"
clippy.use_self = "warn"
clippy.wildcard_imports = "warn"

clippy.cargo_common_metadata = "warn"
clippy.negative_feature_names = "warn"
clippy.redundant_feature_names = "warn"
clippy.wildcard_dependencies = "warn"
# END LINEBENDER LINT SET

[features]
default = ["std"]
std = []
libm = ["dep:libm"]
mint = ["dep:mint"]
serde=["smallvec/serde", "dep:serde"]
schemars=["schemars/smallvec", "dep:schemars"]

[dependencies]
smallvec = "1.13.2"

[dependencies.arrayvec]
version = "0.7.6"
default-features = false

[dependencies.libm]
version = "0.2.11"
optional = true

[dependencies.mint]
version = "0.5.9"
optional = true

[dependencies.schemars]
version = "0.8.21"
optional = true

[dependencies.serde]
version = "1.0.215"
optional = true
default-features = false
features = ["alloc", "derive"]

# This is used for research but not really needed; maybe refactor.
[dev-dependencies]
rand = "0.8.5"

[target.wasm32-unknown-unknown.dev-dependencies]
# We have a transitive dependency on getrandom and it does not automatically
# support wasm32-unknown-unknown. We need to enable the js feature.
getrandom = { version = "0.2.15", features = ["js"] }
